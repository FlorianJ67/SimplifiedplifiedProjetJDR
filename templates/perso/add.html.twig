{% extends 'base.html.twig' %}

{% block title %}Créer un Personnage{% endblock %}

{% block header %}
    {{ include('header.html.twig') }}
{% endblock %} 

{% block body %}
{% set percentHealt = (100 - (perso.sante / perso.santeMax)*100) ~ "%" %}
<style>
    /*  */
    .healtBar>i:first-child:after {
        height: {{ percentHealt }};
    }
</style>
<div class="persoForm">
    {{ form_start(formAddPerso) }}
    <div class="healtBar">
        <i class="fa-solid fa-heart"></i>
        <i class="fa-regular fa-heart"></i>
        {{ form_row(formAddPerso.sante) }}
        {{ form_row(formAddPerso.santeMax) }}
    </div>
        {{ form_row(formAddPerso.nom) }}
        {{ form_row(formAddPerso.espece) }}
        {{ form_row(formAddPerso.origine) }}
        {{ form_row(formAddPerso.age) }}

        {{ form_row(formAddPerso.taille) }}
        {{ form_row(formAddPerso.poids) }}
        {{ form_row(formAddPerso.sex) }}
        <!-- MultiForm Caractéristique -->
        <div id="caracteristiquePerso" data-prototype="{{ form_row(formAddPerso.caracteristiquePersos.vars.prototype)|e('html_attr') }}">
            {{ form_row(formAddPerso.caracteristiquePersos) }}
            <span id="spanCarac"></span>
        </div>
        <!-- MultiForm Compétence -->
        <div id="competencePerso" data-prototype="{{ form_row(formAddPerso.competencePersos.vars.prototype)|e('html_attr') }}">
            {{ form_row(formAddPerso.competencePersos) }}
            <span id="spanComp"></span>
        </div>
        <!-- MultiForm Objet -->
        <div id="inventaire" data-prototype="{{ form_row(formAddPerso.inventaires.vars.prototype)|e('html_attr') }}">
            {{ form_row(formAddPerso.inventaires) }}
            <span id="spanInv"></span>
        </div>
        <!-- Si le personnage existe déjà affiche 'Modifié' plutôt que 'Créer' sur le bouton submit -->
        {% if perso.nom != null %}
            {{ form_row(formAddPerso.submit, { 'label': 'Modifié' }) }}
        {% endif %}
    {{ form_end(formAddPerso) }}
</div>
    <!-- Si une entité perso déjà existante a été charger alors on affiche son récapitulatif (info_perso) -->
    {% if perso.nom != null %}
    <div>
        {{ block("body", "perso/info.html.twig") }}
    </div>
    {% endif %}

    <div>
        <div>
            <h3>Objets:</h3>
            {{ form_start(formAddObjet) }}
            {{ form_end(formAddObjet) }}
        </div>
        <div>
            <h3>Ajoutez une caractéristique</h3>
            {{ form_start(formAddCaracteristique) }}
            {{ form_end(formAddCaracteristique) }}
        </div>
        <div>
            <h3>Configurer un bonus de compétence sur caractéristique</h3>
            {{ form_start(formAddCompetenceInflueCarac) }}
            {{ form_end(formAddCompetenceInflueCarac) }}
        </div>
        <div>
            <h3>Ajoutez une compétence</h3>
            {{ form_start(formAddCompetence) }}
            {{ form_end(formAddCompetence) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        let collectionCarac, collectionComp, inventaire,
            boutonAjoutCarac, boutonAjoutComp, boutonAjoutObjet,
            spanCarac, spanComp, spanInv;
        window.onload = () => {
            //On récupère la section du formulaire de la table associatif des multiple formulaire
            collectionCarac = document.querySelector("#caracteristiquePerso");
            //----
            collectionComp = document.querySelector("#competencePerso");
            //----
            inventaire = document.querySelector("#inventaire");

            //On récupère la balise dans laquel les formulaires vont être générer
            spanCarac = collectionCarac.querySelector("#spanCarac");
            //----
            spanComp = collectionComp.querySelector("#spanComp");
            //----
            spanInv = inventaire.querySelector("#spanInv");

            //On génère les boutons d'ajout
            boutonAjoutCarac = document.createElement("button");
            boutonAjoutCarac.className = "ajout-caracteristiquePerso"
            boutonAjoutCarac.innerText= "Ajouter une caractéristique";
            boutonAjoutCarac.setAttribute("title", "Ajouter une caractéristique");
            //----
            boutonAjoutComp = document.createElement("button");
            boutonAjoutComp.className = "ajout-competencePerso"
            boutonAjoutComp.innerText= "Ajouter une compétence";
            boutonAjoutComp.setAttribute("title", "Ajouter une compétence");
            //----
            boutonAjoutObjet = document.createElement("button");
            boutonAjoutObjet.className = "ajout-objetPerso"
            boutonAjoutObjet.innerText= "Ajouter un objet";
            boutonAjoutObjet.setAttribute("title", "Ajouter un objet");

            //On place les boutons sur la page
            let nouveauBoutonCarac = spanCarac.append(boutonAjoutCarac);
            //----
            let nouveauBoutonComp = spanComp.append(boutonAjoutComp);
            //----
            let nouveauBoutonObjet = spanInv.append(boutonAjoutObjet);

            //On récupère la taille du tableau
            collectionCarac.dataset.index = collectionCarac.querySelectorAll("input").length;
            //----
            collectionComp.dataset.index = collectionComp.querySelectorAll("input").length;
            //----
            inventaire.dataset.index = inventaire.querySelectorAll("input").length;

            // On créer l'évenement au click pour ajouter 1 formulaire
            boutonAjoutCarac.addEventListener("click", function(){
                addButton(collectionCarac, nouveauBoutonCarac, spanCarac, "caracteristique");
            });
            //----
            boutonAjoutComp.addEventListener("click", function(){
                addButton(collectionComp, nouveauBoutonComp, spanComp, "competence");
            });
             //----
            boutonAjoutObjet.addEventListener("click", function(){
                addButton(inventaire, nouveauBoutonObjet, spanInv, "objet");
            }); 
        }
        // Fonction de création de formulaire supplémentaire
        function addButton(collection, nouveauBouton, span, stat){
            let prototype = collection.dataset.prototype;
            let index = collection.dataset.index;
            prototype = prototype.replace(/__name__/g, index);
            let content = document.createElement("html");
            content.innerHTML = prototype;
            let newForm = content.querySelector("div");
            // on génère le bouton de suppresion du formulaire
            let boutonSuppr = document.createElement("button");
            // on définié son type
            boutonSuppr.type = "button";
            // on définié son id
            boutonSuppr.id = "delete-"+ stat + "Perso-" + index;
            // on définié sa classe
            boutonSuppr.className = "delete-"+ stat + "-button";
            // on définié son text interne           
            boutonSuppr.innerText = "Supprimer";
            // on place le bouton
            newForm.append(boutonSuppr);
            // on incrémente le compteur
            collection.dataset.index++;
            // on replace le bouton d'ajout
            let boutonAjout = collection.querySelector(".ajout-" + stat + "Perso");
            span.insertBefore(newForm, boutonAjout);
            // fonction de suppression du bouton suppr
            boutonSuppr.addEventListener("click", function(){
                this.previousElementSibling.parentElement.remove();
            });
        }
        /* updating healt bar */
        /* sante */
        document.getElementById("perso_sante").onchange = function() {
            var x = document.getElementById("perso_sante").value;
            var y = document.getElementById("perso_santeMax").value;
            var percentHealt = 100 - ((x/y)*100);
            var HealtBarPercent = document.createElement("style");
            
            document.head.lastChild.remove();

            HealtBarPercent.innerHTML =
            ".persoForm>form>.healtBar>i:first-child:after { height: " + percentHealt + "%;}";
            document.head.appendChild(HealtBarPercent);
        }
        /* santeMax */
        document.getElementById("perso_santeMax").onchange = function() {
            var x = document.getElementById("perso_sante").value;
            var y = document.getElementById("perso_santeMax").value;
            var percentHealt = 100 - ((x/y)*100);
            var HealtBarPercent = document.createElement("style");

            document.head.lastChild.remove();
            
            HealtBarPercent.innerHTML =
            ".persoForm>form>.healtBar>i:first-child:after { height: " + percentHealt + "%;}";
            document.head.appendChild(HealtBarPercent);
        }
    </script>
{% endblock %}
{% block footer %}
    {{ include('footer.html.twig') }} 
{% endblock %}